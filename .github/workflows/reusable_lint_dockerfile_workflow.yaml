name: Lint Dockerfile workflow

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
        description: In short the directory where the Dockerfile resides
      file:
        required: true
        type: string
        description: The name of the file we want to create an image from e.g. Dockerfile
      image_name:
        required: true
        type: string
      environment:
        required: false
        type: string
      docker_env_vars:
        required: false
        type: string
        description: |
          This is how you should populate this attribute when calling the workflow: 
          with:
            docker_env_vars: |
              "VAR_ONE=VALUE_ONE"
              "VAR_TWO=VALUE_TWO"
    secrets:
      docker_secrets:
        required: false
        description: |
          This is how you should populate this attribute when calling the workflow: 
          secrets:
            docker_secrets: |
              "SECRET_ONE=VALUE_ONE"
              "SECRET_TWO=VALUE_TWO"
      workload_identity_provider:
        required: true
      service_account:
        required: true


permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: write


jobs:
  dockerfile-lint:
    name: Check if dockerfiles are correctly configured
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4

      - name: Extract branch name
        id: extract_branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - id: authenticate_with_gcp
        uses: google-github-actions/auth@v0.8.1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          service_account: ${{ secrets.service_account }}
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-north1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.authenticate_with_gcp.outputs.access_token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: europe-north1-docker.pkg.dev/stock-market-research-410417/docker/${{ inputs.image_name }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}

      - name: set_up_qemu
        uses: docker/setup-qemu-action@v3

      - id: setup_buildx
        uses: docker/setup-buildx-action@v3

      - id: docker_test_build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          secrets: |
            ${{ secrets.docker_secrets }}
          tags: |
             ${{ steps.meta.outputs.tags }}

      - id: setup_python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - id: create_env_vars_file
        name: Create Environment Variables File
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            vars = """${{ inputs.docker_env_vars }}"""
            with open(".env", "w") as file:
              file.write(vars)

      - id: test_container
        run: |
          cat .env

          docker run --rm europe-north1-docker.pkg.dev/stock-market-research-410417/docker/${{ inputs.image_name }}:${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}
